<!DOCTYPE html>
<html>
<% include head %>
  <link rel='stylesheet' href='http://121.40.68.211:8857/styles/instancePlay.css' />
  <!-- <link rel='stylesheet' href='../styles/instancePlay.css' /> -->
  <body>
    <div class="wrapper">
      <div class="time-wrapper">第<span class="count">1</span>关</div>
      <div class="box box-style">
        <div class="box-play" id="boxPlay">
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
          <div></div>
        </div>
        <div id="box-time" class="box-time">倒计时
          <span id="time-num">6</span>
          秒
       </div>
      </div>
      <div class="dialog">
        <div class="play-again">
          <p class="restart">闯关失败，重玩本关</p>
          <div class="operate">
            <button id="sure" class="choose sure" >确认</button>
            <button id="cancel" class="choose cancel">取消</button>
          </div>
        </div>
        <p class="play-more"></p>
      </div>
    </div>
    <script type="text/javascript" src="http://cdn.bootcss.com/jquery/3.1.1/jquery.js"></script>
    <script type="text/javascript">
      'use strict';
      
      $(document).ready(function () {
        // var user = ('<%- JSON.stringify(users )%>');
        var user = window.localStorage.getItem('user');
        var userInfo = JSON.parse(user);
        var level = userInfo.level;
        var cubes = new Array(16);
        var count = window.localStorage.getItem('count') || 0;
        var winCount = window.localStorage.getItem('winCount') || 2;
        var nums = [];
        var time = $('#time-num').html();
        var interval2 = null;
        var point = Number(level) - 1;
        $('.count').html(point);
        $('#sure').on('click', function() {
          location.href = '/instancePlay' + window.location.search;
        })
        $('#cancel').on('click', function(){
          userInfo.totalScore= Number(userInfo.level) - 2;
          $.ajax({
            type: "post",
            url: "/Result",
            dataType: "json",
            data: userInfo,
            success: function callback(d) {
              var success = d.success;
              if (success) location.href = '/instanceResult' + window.location.search;
            }
          });
        })
        //渲染游戏格子
        function render() {
          var allCube = document.getElementById("boxPlay").getElementsByTagName("div");
          for (var i = 0; i < 16; i++) {
            if (cubes[i] === 0) {
              allCube[i].innerHTML = '';
              allCube[i].className = "cube0";
            } else if (cubes[i] !== 0) {
              allCube[i].innerHTML = cubes[i];
              allCube[i].className = 'cube';
            }
          }
        }
        function randNum(min, max, num) {
          var arr = [],
              t;
          function fn(i) {
            for (i; i < num; i++) {
              t = parseInt(Math.random() * (max - min + 1) + min);
              for (var k in arr) {
                if (arr[k] == t) {
                  fn(i);
                  break;
                }
              }
              arr[i] = t;
            }
          }
          fn(0);
          return arr;
        }
        function initNum(level) {
          nums = randNum(1, level, level);
          for (var i in nums) {
            cubes[nums[i]] = nums[nums.length - i - 1];
          }
          nums.sort(function (a, b) {
            return a - b;
          });
          render();
        }
        function again() {
          $('.dialog').show();
          $('.play-again').show();
          clearInterval(interval2);
        }
        function clickListener() {
          var cubeS = document.querySelectorAll('.cube');
          var win = [];
          cubeS.forEach(function (cube, i) {
            var _this = cube;
            cube.addEventListener('click', function (e) {
              e.stopPropagation();
              e.currentTarget.className = 'cube';
              for (var _i = 0; _i < nums.length; _i++) {
                if (_this.innerHTML != nums[_i]) {
                  count = Number(count) + 1;
                  if (count < 2) {
                    window.localStorage.setItem('count', count);
                    return again();
                  } else {
                    window.localStorage.setItem('count', count);
                    $('.dialog').show();
                    $('.play-again').hide();
                    clearInterval(interval2);
                    $('.play-more').show();
                    $('.play-more').html('很可惜，闯关失败...');
                    userInfo.totalScore= Number(userInfo.level) - 2;
                    $.ajax({
                      type: "post",
                      url: "/Result",
                      dataType: "json",
                      data: userInfo,
                      success: function callback(d) {
                        var success = d.success;
                        if (success) setTimeout( function(){
                          location.href = '/instanceResult' + window.location.search;
                        }, 500)
                      }
                    });
                  }
                } else {
                  var l = nums.length;
                  nums.splice(_i, 1);
                  _i = l;
                  if (nums.length === 0) {
                    level = Number(level) + 1;
                    Object.assign(userInfo, { level: level });
                    window.localStorage.setItem('user', JSON.stringify(userInfo));
                    if (level < 16) {
                      count = 0;
                      window.localStorage.setItem('count', count);
                      window.location.href='/instancePlay' + window.location.search;

                      // $('.box-time').html('倒计时<span id="time-num">6</span>秒');
                    } else {
                      userInfo.totalScore = Number(userInfo.level) - 2;
                      $.ajax({
                        type: "post",
                        url: "/Result",
                        dataType: "json",
                        data: userInfo,
                        success: function callback(d) {
                          var success = d.success;
                          if (success) location.href = '/instanceResult' + window.location.search;
                        }
                      });
                    }
                  }
                }
              }
            }, false);
          });
        }
        function hideNum(lt) {
          $('.cube').addClass('hide-cube');
          clickListener();
        }
        function timer2(time) {
            interval2 = setInterval(function () {
            var n = window.localStorage.getItem('count');
            if (nums.length == 0 ) return clearInterval(interval2);
            if (time > 0 ) {
              time--;
              $('.left-time').html(time);
            } else if(time <= 0){
              clearInterval(interval2);
              var count = 2;
              window.localStorage.setItem('count', count);
              userInfo.totalScore = Number(userInfo.level) - 2;
                      $.ajax({
                        type: "post",
                        url: "/Result",
                        dataType: "json",
                        data: userInfo,
                        success: function callback(d) {
                          var success = d.success;
                          if (success) location.href = '/instanceResult' + window.location.search;
                        }
                      });
            }
          }, 1000);
        }
        function timer(time, level) {
      
          var interval = setInterval(function () {
            var second;
            if (time > 0) {
              time--;
              $('#time-num').html(time);
            } else {
              clearInterval(interval);
              $('#box-time').html('请按顺序点击格子 <span class="left-time"></span> 秒');
              var t = level * 2;
              $('.left-time').html(t);
              timer2(t);
              hideNum();
            }
          }, 1000);
        }
      
        function start(time, level) {
          for (var i = 0; i < 16; i++) {
            //数组初始化
            cubes[i] = 0;
          }
          initNum(level);
          timer(time, level);
        }
      
        function init(time, level) {
          start(time, level);
        }
        init(time, level);
      });
    </script>
  </body>
</html>